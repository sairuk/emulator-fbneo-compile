#!/bin/bash
#
# Compile both versions then build delta and diff data for each
#
# @@Author: sairuk

#set -x

DATDIFF=${HOME}/devel/datdiff/
DATOUT=${HOME}/.local/share/fbneo/dats
COMMIT=${1:-master}
COMTSHRT=$(echo $COMMIT | cut -b-9)
COMPILE=1
RUNDATE=$(date +'%Y-%m-%d_%H-%M-%S')
LOGDIR="${HOME}/logs/$(basename $0)/"
LOGFILE="${LOGDIR}/$(basename $0)-${RUNDATE}.log"

function _log {
  [ ! -d ${LOGDIR} ] && mkdir -p ${LOGDIR}

  local TEEARGS=""
  local SECT=$2
  local MSG="$1"
  if [ ! -z "${SECT}" ] 
  then
    TEEARGS="-a"
  else
    SECT="${1}"
  fi

  echo "[$(date +'%Y-%m-%d %H-%M-%S')] ${SECT}|: ${MSG}" | tee ${TEEARGS} ${LOGFILE}
}

function header {
_log "### $1: any output will be in ${LOGFILE} ###" "RUN"
}

function compile {
  local SECT="COMPILE"
  if [ $COMPILE -eq 1 ]
  then
    _log "Running container for $1, building ${COMMIT}" ${SECT}
    ${HOME}/devel/docker/emulator-fbneo/run_container_$1 ${COMMIT} >> ${LOGFILE}
    #[ ! $? -eq 0 ] && _log "Compile failed for $1 check ${LOGFILE} for details" ${SECT} && exit 1
  else
    _log "Compile was not armed for this run of $1"
  fi
}

function gendats {
  local DOCKEROUT="${HOME}/dockerout/fbneo/$1/FBNeo"
  local DATDEST="${HOME}/devel/datdiff/dats/fbneo/$1"
  local SECT="DATS"

  [ ! -f ${DOCKEROUT}/fbneo ] && _log "fbneo not found, $1 build failed ... exiting" CHECK && exit 1

  _log "Blindly removing old dats from ${DATDEST}" ${SECT}
  rm -fvv ${DATDEST}/*.dat >> ${LOGFILE}

  ${DOCKEROUT}/fbneo -dat >> ${LOGFILE}

  _log "Copying new dats from ${DATOUT} to ${DATDEST}" ${SECT}
  cp -vvv ${DATOUT}/*.dat ${DATDEST}/ >> ${LOGFILE}

  _log "Removing old dats from ${DATOUT}" ${SECT}
  rm -fvv ${DATOUT}/*.dat >> ${LOGFILE}
}

function monitor {
  # check in to see if compiles are complete
  local NORMAL="unknown"
  local DEBUG="unknown"

  SECT="MONITOR"
  STATE='"exited"'
  CHKINT=15
  CHKPTS=60
  CHKIDX=1

  if [ $COMPILE -eq 1 ]
  _log "sleeping for ${CHKINT}s to give docker a chance to bring the containers up" "COMPILE"
  sleep ${CHKINT}
  _log "This is the monitor, it'll check the containers every ${CHKINT}s for ${CHKPTS} tries" "MONTIOR"
  then
    while [ ${CHKIDX} -le $CHKPTS ]
    do
        _log "Try ${CHKIDX}/${CHKPTS} Checking containers" "MONITOR"
        NORMAL=$(docker inspect emulator-fbneo-normal | jq '.[0].State.Status')
        DEBUG=$(docker inspect emulator-fbneo-debug | jq '.[0].State.Status')
        # do the containers exist?
        if [ $NORMAL != '"null"' ] || [ $DEBUG != '"null"' ]
        then
        _log "State normal ${NORMAL}" "MONITOR"
        _log "State debug ${DEBUG}" "MONITOR"
        if [ $NORMAL != ${STATE} ] || [ $DEBUG != ${STATE} ]
        then
          _log "Container still not in ${STATE} state, sleeping for ${CHKINT}s" "MONITOR"
          CHKIDX=$((${CHKIDX}+1))
          sleep ${CHKINT}
        else
          break
        fi
      fi
    done
  fi
}

function run {
  _log "NEW RUN"

  header normal
  compile normal

  header debug
  compile debug

  monitor

  gendats normal
  gendats debug

}

run 


# this next section needs the diff tool, its not released yet so we'll exit if
# we can't find it

[ ! -f "${DATDIFF}/diff-dat_alt.py" ] && exit

SECT="DIFF"
header "diffs"

cd ${DATDIFF}

# deltas
_log "Building delta set for ${COMMIT}" ${SECT}
./run_FBNEO_delta ${COMTSHRT} &>> ${LOGFILE}

# mame diffs
_log "Building MAME diff set for ${COMMIT}, MAME version is handled in the diff script not here" ${SECT}
./run_FBNEO_mame-diff ${COMTSHRT} &>> ${LOGFILE}

# packerman!
_log "Packing the new data from ${COMMIT}" ${SECT}
./pack_dats ${COMTSHRT} &>> ${LOGFILE}

